COMANDOS BASICOS DE GIT

COMANDOS BASICOS DE TERMINAL

pwd                             // ubicacion de la carpeta actual
mkdir nombreCarpeta             // Crea una carpeta en la ubicacion actual
rm nombreArchivo                // Elimina el archivo 
touch nombreArchivo             // Crea un archivo 
cat nombreArchivo               // muestra el contenido del archivo
history                         // historial de comandos utilizados
nombreComando --help            // muestra ayuda sobre el comando en mencion
checkout                        // extrae los combios realizados


COMANDOS BASICOS DE GIT

git init                        //crea un nrepositorio
git add archivo.extension       //agrega el archivo al repositorio temporal
git commit -m "Mensaje"         //agregamos los cambios al repositorio
git add .                       //agregamos todos los cambios del repositorio
git status                      //visualiza los cambios realizados
git shortlog -i                 //indica que commits ha realizado un usuario, mostrando el usuario y el titulo de sus commits.
git log nombreArchivo           //Muestra el historico de cambios del archivo
git log --oneline               //Te muestra el id commit y el titulo del commit.
git log --decorate              //Te muestra donde se encuentra el head point en el log.
git log --stat                  //Explica el numero de lineas que se cambiaron brevemente.
git log -p                      //Explica el numero de lineas que se cambiaron y te muestra que se cambio en el contenido.
git log --graph --oneline       //resumido y mas ordenado
git log -3                      //Limitamos el numero de commits.
git log --after="2018-1-2"      //Commits para localizar por fechas.
git log --after="today"         //Commits para localizar por fechas.
git log --author="Name Author"  //Commits realizados por autor que cumplan exactamente con el nombre.
git log --grep="INVIE"          //Busca los commits que cumplan tal cual esta escrito entre las comillas.
git log --grep="INVIE" -i-      //Busca los commits que cumplan sin importar mayusculas o minusculas.
git log  nombreArchivo          //Busca los commits en un archivo en especifico.
git log -S "Por contenido"      //Buscar los commits con el contenido dentro del archivo.
git log > log.txt               //guardar los logs en un archivo txt
git push                        //envia el repositorio a otro remoto
git pull                        //trae un repositorio remoto
git rm --cached nombreArchivo   //Elimina los archivos de nuestro repositorio local y del area stating, mantiene en el disco duro 
git rm --force nombreArchivo    //Elimina el archivo y del disco duro, pero lo podemos recuperar con comandos avanzados
git config --list               //muestra la lista de configuracion de git
git config --list --show-origin //rutas de acceso a la configuracion de git



VOLVER EN EL TIEMPO EN NUESTRO REPOSITORIO 

git reset --soft IDcommit               //elimina los cambios futuros a el y los mantiene en el stating area 
git reset --mixed IDcommit              //elimina los cambios futuros a el y los mantiene en el Working Directory
git reset --hard IDcommit               //elimina los cambios futuros  y no guarda ningun cambios
git reset HEAD                          //quita del Staging Area el archivo y lo deja en Working Directory 
git checkout IDcommit nombreArchivo     //Permite volver el archivo a un estado de acuerdo al IDcommit
git checkout master nombreArchivo       //devuelve el archivo a la version master del archivo la cual es la ultima version 

RAMAS O BRANCHES DE GIT

git show                                //me muestra el lugar donde esta la rama principal
git branch                              //muestra todas las ramas creadas
git branch -nombre de rama-             //crea una nueva rama
git checkout - nombre de la rama-       //salta de una rama a otra
git checkout -b rama                    //crea una rama y salta a ella
git merge -rama a unir-  "mensaje       //trae a la rama master los cambios hechos en otras rama y agregar un msj porque es un commit 

USO DE GIT

git remote add origin url               //Trae un repositorio remoto a nuestro repositorio local
git remote                              //nos muestra el repositorio origin de github
git pull origin master                  //trae todos los cambios realziados en el origin sino hacemos esto nos genera error
git push origin master                  //envia todo a nuestro repositorio remoto 


A TENER EN CUENTA
    GiHub en octunre 2020 decide cambiar la rama 'master' a rama 'main'; lo que significa que han cambiado los comandos

git push origin master                  //En GiHub se interpreta como una rama independiente llamada 'master' 
                                        //no se carga a la rama default de GitHub, debido a que su rama default ahora se llama 'main'
git push origin master:main             //envie a origin(remoto) la rama 'master' de nuestro repositorio local a la rama 'main' del servidor
git pull origin main --allow-unrelated-histories


CONFIGURAR LLAVE SSH EN local

1. Generar tus llaves SSH               
ssh-keygen -t rsa -b 4096 -C "tu@email.com"
2. Terminar de configurar nuestro sistema en Windows y Linux
    Encender el "servidor" de llaves SSH de tu computadora:
    eval $(ssh-agent -s)
    Anadir tu llave SSH a este servidor
    ssh-add ruta-donde-guardar-tu-llave-privada


CONEXION A GITHUB CON SSH

1. Agregamos en nuestro rpeositorio remoto de GiHub nuestra llave publica en settings
2. cambiamos la url de nuestro repositorio remoto con
    git remote set-url origin urlSSH
    git remote -v                       //Muestra las url a donde tenemos conectada nuestro repositorio.

TAGS Y VERSIONES EN GIT Y GITHUB

git log --all --graph --decorate --oneline
alias nombreAlias="git log --all --graph --decorate --oneline"  //con esto creamos un alias para acceder a ese comando de forma mas rapida
git tag -a nombreTag -m "mensaje" IDcommit                      //Crea un nuevo tag y asignarlo a un commit
git tag -d nombreTag                                            //Borrar un tag en el repositorio local
git tag o got show-ref --tags                                   //Lista los tags de nuestro repositorio local 
git push origin --tags                                          //Publicar un tag en el repositorio remoto 
git push origin :refs/tags/nombreTAG                            //Elimina el tags en el repositorio remoto

